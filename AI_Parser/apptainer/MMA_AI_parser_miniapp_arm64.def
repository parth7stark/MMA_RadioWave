Bootstrap: docker
From: nvidia/cuda:11.8.0-cudnn8-runtime-ubuntu20.04

%post
    # Update system and install python
    apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \
    git \
    wget \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get autoremove -y \
    && apt-get clean
    
    # Install a specific conda version to avoid python conflict version (conda requires python>3.11 and <3.12)
    wget -q -P /tmp \
    https://repo.anaconda.com/miniconda/Miniconda3-py310_24.11.1-0-Linux-aarch64.sh \
    && bash /tmp/Miniconda3-py310_24.11.1-0-Linux-aarch64.sh -b -p /opt/conda \
    && rm /tmp/Miniconda3-py310_24.11.1-0-Linux-aarch64.sh


    # Update PATH to use conda during this build phase
    export PATH="/opt/conda/bin:$PATH"
    export LD_LIBRARY_PATH="/opt/conda/lib:$LD_LIBRARY_PATH"

    # Install conda packages
    conda install -qy conda==24.11.1 pip python=3.10
    conda install --channel conda-forge lalsuite
    conda clean --all --force-pkgs-dirs --yes

    # Set up the working directory
    mkdir -p /app

    cd /app

    # Install setup.py packages
    pip3 install -e ".[examples]"

    # Install setup packages then install specific versions using requirements.txt
    pip3 install -r requirements.txt

    # Install pytorch with CUDA
    # pip3 install torch==2.1.2 torchvision==0.16.2 torchaudio==2.1.2 --index-url https://download.pytorch.org/whl/cu118
    pip3 install --pre torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/cu124

%files
    # Copy all files to /app during build
    . /app

%environment
    # Set environment variables
    export PATH="/opt/conda/bin:$PATH"
    export LD_LIBRARY_PATH="/opt/conda/lib:$LD_LIBRARY_PATH"

